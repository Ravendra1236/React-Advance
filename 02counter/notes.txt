Lecture 5 : Hooks 
Why there is a need of hooks ? 
Because if we want to write our logic we can do it by using simple JS
but if we want to change UI then it will be control by react 
It gives its own functionality known as Hooks 
For different function implementations we have different hooks for UI updation .

// useState will return 2 value : value which has to be updated and function which will update that value
  let [value , setValue] = useState(0);

  const addValue = ()=>{
    // UI updation with help of hooks : useState 
    value = value + 1 ;
    setValue(value);
    // value = value + 1 ;
    console.log("Value added: " , value);
    
  }
  const deletedValue = ()=>{
    // UI updation with help of hooks : useState 
    value = value - 1 ;
    setValue(value);
    // value = value + 1 ;
    console.log("Value deleted: " , value);
    
  }

  return (
    <>
      <h1>Hello! this is a counter button and value is = {value}</h1>
      <br />
      <button onClick={addValue}>Counter Up{value}</button>
      <br />
      <button onClick={deletedValue}>Counter Down{value}</button>
    </>
  )


// Virtual DOM : 
/* 
1.The createRoot create's its own DOM and then compare it with the web browser's DOM and only update those components which are actually updated.
2.But the browser removes the whole DOM and then recrates the whole DOM with the updated values this is called reload.
3. However virtual DOM tracks whole DOM like a tree like structure and updates only those values which were only changed.
4. But some values depends on network call so if we update a value it might get update immediately via a network call.
5. So we will have to update it again. To avoid this overhead we can drop the updation calls for the immediate value update.
6. The current algo used by the React is called the React Fibre algo.
7. The algo react uses to differentiate the web browser's tree and React's tree formed through create root is called reconciliation.
8. Reconciliation is the algo behind what popularly known as the Virtual-DOM.
9. In UI it is not necessary for every update to be applied immediately. 
10. It is sended in the form of bundles
*/

